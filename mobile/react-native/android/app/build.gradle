apply plugin: "com.android.application"
apply plugin: "com.facebook.react"
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

import com.android.build.OutputFile

def enableProguardInReleaseBuilds = true
def enableSeparateBuildPerCPUArchitecture = false
def enableHermes = project.ext.react.get("enableHermes", false)

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.krishimitra.app"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        multiDexEnabled true
        
        buildConfigField "String", "API_BASE_URL", "\"https://api.krishimitra.com\""
        buildConfigField "String", "MAPBOX_ACCESS_TOKEN", "\"${project.properties.get('MAPBOX_ACCESS_TOKEN', '')}\""
        buildConfigField "String", "CODEPUSH_DEPLOYMENT_KEY", "\"${project.properties.get('CODEPUSH_DEPLOYMENT_KEY_ANDROID', '')}\""
        
        ndk {
            abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
        }
        
        manifestPlaceholders = [
            MAPBOX_ACCESS_TOKEN: "${project.properties.get('MAPBOX_ACCESS_TOKEN', '')}",
            GOOGLE_MAPS_API_KEY: "${project.properties.get('GOOGLE_MAPS_API_KEY', '')}"
        ]
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
                storeFile file(MYAPP_UPLOAD_STORE_FILE)
                storePassword MYAPP_UPLOAD_STORE_PASSWORD
                keyAlias MYAPP_UPLOAD_KEY_ALIAS
                keyPassword MYAPP_UPLOAD_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            buildConfigField "String", "BUILD_TYPE", "\"debug\""
            applicationIdSuffix ".debug"
            debuggable true
        }
        release {
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
            buildConfigField "String", "BUILD_TYPE", "\"release\""
        }
    }

    packagingOptions {
        pickFirst "lib/x86/libc++_shared.so"
        pickFirst "lib/x86_64/libc++_shared.so"
        pickFirst "lib/arm64-v8a/libc++_shared.so"
        pickFirst "lib/armeabi-v7a/libc++_shared.so"
    }

    productFlavors {
        staging {
            applicationIdSuffix ".staging"
            buildConfigField "String", "API_BASE_URL", "\"https://staging-api.krishimitra.com\""
        }
        production {
            buildConfigField "String", "API_BASE_URL", "\"https://api.krishimitra.com\""
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "com.facebook.react:react-native:+"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0"
    
    // Firebase
    implementation platform('com.google.firebase:firebase-bom:32.2.3')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-firestore'
    
    // Google Services
    implementation 'com.google.android.gms:play-services-auth:20.7.0'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    
    // Networking
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.11.0'
    
    // Security
    implementation 'androidx.biometric:biometric:1.1.0'
    implementation 'net.zetetic:android-database-sqlcipher:4.5.4'
    
    // Media & Camera
    implementation 'androidx.exifinterface:exifinterface:1.3.6'
    
    // Push Notifications
    implementation 'me.leolin:ShortcutBadger:1.1.22'
    
    debugImplementation("com.facebook.flipper:flipper:${FLIPPER_VERSION}") {
        exclude group:"com.facebook.fbjni"
    }
    debugImplementation("com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}") {
        exclude group:"com.facebook.flipper"
        exclude group:"com.squareup.okhttp3", module:"okhttp"
    }
    debugImplementation("com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}") {
        exclude group:"com.facebook.flipper"
    }

    if (enableHermes) {
        def hermesPath = "../../node_modules/hermes-engine/android/"
        debugImplementation files(hermesPath + "hermes-debug.aar")
        releaseImplementation files(hermesPath + "hermes-release.aar")
    } else {
        implementation jscFlavor
    }
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle")
applyNativeModulesAppBuildGradle(project)
