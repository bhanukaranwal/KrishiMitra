apiVersion: v1
kind: ConfigMap
metadata:
  name: krishimitra-config
  namespace: krishimitra
data:
  # Application Configuration
  NODE_ENV: "production"
  LOG_LEVEL: "info"
  API_VERSION: "v1"
  
  # Database Configuration
  DB_HOST: "postgres-service"
  DB_PORT: "5432"
  DB_NAME: "krishimitra"
  MONGO_HOST: "mongodb-service"
  MONGO_PORT: "27017"
  MONGO_DB: "krishimitra"
  
  # Cache Configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  
  # Message Queue Configuration
  KAFKA_BROKERS: "kafka-service:9092"
  NATS_URL: "nats://nats-service:4222"
  
  # External Services
  MAPBOX_ACCESS_TOKEN: ""
  GOOGLE_EARTH_ENGINE_KEY: ""
  AWS_REGION: "us-east-1"
  
  # Features
  ENABLE_METRICS: "true"
  ENABLE_TRACING: "true"
  ENABLE_LOGGING: "true"
  
  # Security
  CORS_ORIGINS: "https://krishimitra.com,https://app.krishimitra.com"
  JWT_ALGORITHM: "HS256"
  JWT_EXPIRES_IN: "24h"
  
  # ML Services
  ML_MODEL_PATH: "/models"
  ML_BATCH_SIZE: "32"
  ML_MAX_WORKERS: "4"
  
  # Satellite Data
  SATELLITE_DATA_PATH: "/data/satellite"
  SATELLITE_PROCESSING_WORKERS: "8"
  
  # IoT Configuration
  IOT_MQTT_BROKER: "mqtt-service"
  IOT_MQTT_PORT: "1883"
  IOT_DATA_RETENTION: "365d"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: krishimitra-nginx-config
  namespace: krishimitra
data:
  nginx.conf: |
    upstream frontend {
        server frontend-service:3000;
    }
    
    upstream backend {
        server backend-service:8000;
    }
    
    upstream ml-services {
        server ml-services-service:8001;
    }
    
    server {
        listen 80;
        server_name krishimitra.com www.krishimitra.com;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied expired no-cache no-store private must-revalidate auth;
        gzip_types
            text/css
            text/javascript
            text/xml
            text/plain
            text/x-component
            application/javascript
            application/x-javascript
            application/json
            application/xml
            application/rss+xml
            application/atom+xml
            font/truetype
            font/opentype
            application/vnd.ms-fontobject
            image/svg+xml;
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
        
        # Frontend routes
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
        
        # API routes
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeout settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # ML API routes
        location /ml/ {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://ml-services/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Longer timeout for ML operations
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
        
        # Authentication endpoints
        location /api/v1/auth/login {
            limit_req zone=login burst=5 nodelay;
            proxy_pass http://backend;
        }
        
        # Health checks
        location /health {
            proxy_pass http://backend/api/v1/health;
            access_log off;
        }
        
        # Static files
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # WebSocket support
        location /ws/ {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }
    }
